{
  "availability": [],
  "declaration": "",
  "description": "A blueprint of requirements.",
  "overview": "Protocols define a blueprint of requirements. They often provide specific, supplemental functionality to objects which adhere to those requirements. Those requirements can be methods, properties, or even other protocols. Protocols can be used by classes, structures, or enumerations. \n\n One of the most commonly used protocols is ``View``. This protocol has one requirement, a body property. \n\n
  ```\nstruct ExampleView: View {\n    var body: some View {\n        Text(\"üçåüçå\")\n    }\n}\n```\n See [the official Apple protocol documentation](https://docs.swift.org/swift-book/LanguageGuide/Protocols.html) for more.",
  "parameters": [

  ],
  "path": "protocols",
  "relationships": {
    "conformsTo": [],
    "typesConformedBy": [],
    "typesConformingTo": [],
    "typesInheritedBy": [

    ],
    "typesInheritingFrom": [

    ]
  },
  "returns": "",
  "throws": "",
  "title": "Protocols",
  "topics": [],
  "type": "Type"
}
